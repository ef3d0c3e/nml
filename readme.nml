@html.page_title = NML -- Readme
@html.title = NML -- The nice markup languge!
@'html.css = style.css

@tex.main.fontsize = 9
@tex.main.preamble = \usepackage{xcolor} \\
\definecolor{__color1}{HTML}{d5d5d5} \\
\everymath{\color{__color1}\displaystyle}
@tex.main.block_prepend = \color{__color1}

# Paragraphs

Blank lines (or multiple `\\n`'s) create new paragraphs!

```Plain Text, Example
First paragraph :: first '\n'
 :: second '\n'
Second paragraph
```

# Lists

Numbered lists `-`:
 - first
 - second
 - third

Unnumbered lists `\*`:
 * A
 * B
 * C

NML also supports list nesting of multiple kinds:
 * first
 * second
 *- 2.1
 *- 2.2
 *-* even more nested
 * third

# Style

NML supports markdown-based text styling:
 * \*\*bold\*\* -> **bold**
 * \*italic\* -> *italic*
 * \__underline\__ -> __underline__
 * \`emphasis\` -> `emphasis`

Some additionally supportd text styling
 * \`\`inline code\`\` -> ``inline code``
 * \`\`C, int main()\`\` -> ``C, int main()``

# Code

```[line_offset=64] C, Some C code
int main(int argc, char** argv)
{
	return 0;
}
```

# Lua kernel

Simple kernel named `example`:
``Lua
@<example
function make_bold(text)
	return "**" .. text .. "**"
end
>@
``
@<example
function make_bold(text)
	return "**" .. text .. "**"
end
>@

Evaluating `!` from a kernel: `\%<![kernel] eval>\%`

 * `\%<![example] make_bold("Hello, World!")>\%` â†’ %<![example] make_bold("Hello, World!")>%

# Latex

# Support for inline maths:
 * $\sum^{\infty}_{k=1} \frac{1}{k^2} = \frac{\pi^2}{6}$
 * $n! = \int_0^\infty t^n e^{-t} \text{ d}t$
